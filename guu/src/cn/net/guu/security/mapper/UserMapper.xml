<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.net.guu.security.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.net.guu.security.model.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="user_desc" property="userDesc" jdbcType="VARCHAR" />
    <result column="user_duty" property="userDuty" jdbcType="VARCHAR" />
    <result column="sub_system" property="subSystem" jdbcType="VARCHAR" />
    <result column="user_dept" property="userDept" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
    <result column="issys" property="issys" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, username, password, account, user_desc, user_duty, sub_system, user_dept, 
    enabled, issys
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.net.guu.security.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.net.guu.security.model.UserExample" >
    delete from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.net.guu.security.model.User" >
    insert into t_user (user_id, username, password, 
      account, user_desc, user_duty, 
      sub_system, user_dept, enabled, 
      issys)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{userDesc,jdbcType=VARCHAR}, #{userDuty,jdbcType=VARCHAR}, 
      #{subSystem,jdbcType=VARCHAR}, #{userDept,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, 
      #{issys,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="cn.net.guu.security.model.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="userDesc != null" >
        user_desc,
      </if>
      <if test="userDuty != null" >
        user_duty,
      </if>
      <if test="subSystem != null" >
        sub_system,
      </if>
      <if test="userDept != null" >
        user_dept,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="issys != null" >
        issys,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null" >
        #{userDesc,jdbcType=VARCHAR},
      </if>
      <if test="userDuty != null" >
        #{userDuty,jdbcType=VARCHAR},
      </if>
      <if test="subSystem != null" >
        #{subSystem,jdbcType=VARCHAR},
      </if>
      <if test="userDept != null" >
        #{userDept,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
      <if test="issys != null" >
        #{issys,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.net.guu.security.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.userDesc != null" >
        user_desc = #{record.userDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.userDuty != null" >
        user_duty = #{record.userDuty,jdbcType=VARCHAR},
      </if>
      <if test="record.subSystem != null" >
        sub_system = #{record.subSystem,jdbcType=VARCHAR},
      </if>
      <if test="record.userDept != null" >
        user_dept = #{record.userDept,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null" >
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.issys != null" >
        issys = #{record.issys,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_user
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      user_desc = #{record.userDesc,jdbcType=VARCHAR},
      user_duty = #{record.userDuty,jdbcType=VARCHAR},
      sub_system = #{record.subSystem,jdbcType=VARCHAR},
      user_dept = #{record.userDept,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=BIT},
      issys = #{record.issys,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.net.guu.security.model.User" >
    update t_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null" >
        user_desc = #{userDesc,jdbcType=VARCHAR},
      </if>
      <if test="userDuty != null" >
        user_duty = #{userDuty,jdbcType=VARCHAR},
      </if>
      <if test="subSystem != null" >
        sub_system = #{subSystem,jdbcType=VARCHAR},
      </if>
      <if test="userDept != null" >
        user_dept = #{userDept,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="issys != null" >
        issys = #{issys,jdbcType=BIT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.net.guu.security.model.User" >
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      user_desc = #{userDesc,jdbcType=VARCHAR},
      user_duty = #{userDuty,jdbcType=VARCHAR},
      sub_system = #{subSystem,jdbcType=VARCHAR},
      user_dept = #{userDept,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIT},
      issys = #{issys,jdbcType=BIT}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>