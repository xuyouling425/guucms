<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/mvc      
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- 开启代理模式 -->
	<aop:aspectj-autoproxy />
	<!-- 注入的方式可以用annotation -->
	<context:annotation-config />		
	<!-- 自动检测，需要注册的包 -->
	<context:component-scan base-package="cn.net.guu"/>		
	
	<mvc:annotation-driven />

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/guu-jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="c3p0DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialPoolSize" value="10" />
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="5" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="100" />
		<!--最大空闲时间(秒),5分钟内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="3000000" />
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
　　		属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
　　		如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
		<property name="maxStatements" value="0" />
		<!--当连接池中的链接耗尽时c3p0一次同时获取的连接数 -->
		<property name="acquireIncrement" value="5" />
		<!--多少秒检查所有连接池中的空闲连接 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="10" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="c3p0DataSource" />
	</bean>
	
	<!-- 定义拦截器，用来指定事物属性，级别，和异常处理 -->  
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">  
		<property name="transactionManager" ref="transactionManager" />  
		<property name="transactionAttributes">  
			<props>  
				<!-- PROPAGATION_SUPPORTS: 如果已经存在事务,则加入事务;如果没有事务,则以非事务的方式执行;   
					PROPAGATION_MANDATORY: 使用当前事务, 如果没有, 则抛出异常;   
					PROPAGATION_REQUIRED: 新建事务,如果当前有事务, 则挂起; P  
					ROPAGATION_NOT_SUPPORTED:以非事务的方式执行, 如果当前有事务, 则挂起;   
					PROPAGATION_NEVER:以非事务的方式执行, 如果当前有事务,则抛出异常;   
					+/-Exception</prop> + 表示异常出现时事物提交 - 表示异常出现时事务回滚 -->  
				<prop key="select*">PROPAGATION_SUPPORTS,readOnly</prop>  
				<prop key="count*">PROPAGATION_SUPPORTS,readOnly</prop>  
				<prop key="delete*"> PROPAGATION_SUPPORTS,-Exception</prop>  
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>  
				<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>  
			</props>  
		</property>  
	</bean>  


</beans>