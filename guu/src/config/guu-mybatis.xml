<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
		
	<!-- mybatis SqlSessionFactoryBean  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="c3p0DataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:cn/net/guu/**/*.xml" />
	</bean>
		
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />		
	</bean>
	
	<!-- MapperScannerConfigurer 配置 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--
		basePackage指定要扫描的包，在此包之下的映射器都会被  搜索到。可指定多个包，包与包之间用逗号或分号分隔
		第一，无需指定引用SqlSessionFactory，因为MapperScannerConfigurer在创建映射器时会通过自动装配的方式来引用。 
    	  第二，创建的映射器的命名问题。从beans.xml文件中我们可以看出，我们没有办法给MapperScannerConfigurer创建的这些映射器指定id或name属性，
    	  它们对我们似乎是不可见的。这个问题的解决之道在于采用了Spring针对自动侦测到的组件的默认命名策略，亦即把类/接口名字的首字母小写，其他不变，作为映射器的名字
		属性markerInterface指定要寻找的父接口,值注入继承该父接口的类
		--> 
        <property name="basePackage" value="cn.net.guu.*" />
        <property name="sqlSessionTemplateBeanName" value="sqlSession" />
       <!--  <property name="markerInterface" value= "cn.net.guu.core.mapper.MapperFactory"/>  -->
    </bean>
	
	
	
</beans>